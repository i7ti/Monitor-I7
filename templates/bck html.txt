import streamlit as st
import firebase_admin
from firebase_admin import credentials, firestore
import plotly.express as px

# Inicializar Firebase
cred = credentials.Certificate('C:/Users/Moises/Documents/Novo/serviceAccountKey.json')
firebase_admin.initialize_app(cred)
db = firestore.client()

# Função para obter dados do Firestore
def get_data():
    printers_ref = db.collection('printers')
    docs = printers_ref.stream()
    data = []
    for doc in docs:
        data.append(doc.to_dict())
    return data

# Layout do Streamlit
st.sidebar.title('Monitor I7 T.I.')
st.sidebar.markdown('### Menu')
menu = ['Dashboard', 'Locais', 'Relatórios', 'Helpdesk', 'Contas', 'Notificações', 'Suprimentos', 'Downloads', 'Ajuda']
choice = st.sidebar.selectbox('Selecione uma opção', menu)

st.title('Dashboard')

if choice == 'Dashboard':
    st.header('Tickets')
    st.markdown('Nenhum ticket em aberto.')

    st.header('Locais')
    locais = get_data()  # Obtém dados do Firestore
    for local in locais:
        st.write(local['cliente'], '-', local['setor'], '-', local['ip'])

    st.header('Equipamentos')
    for local in locais:
        st.write(local['detalhes_impressora']['modelo'], '-', local['ip'])

    st.header('Logs')
    for local in locais:
        st.write(local['timestamp'], '-', local['cliente'], '-', local['setor'])

elif choice == 'Locais':
    st.header('Locais')
    locais = get_data()  # Obtém dados do Firestore
    for local in locais:
        st.write(local['cliente'], '-', local['setor'], '-', local['ip'])

# Adicione mais seções conforme necessário

